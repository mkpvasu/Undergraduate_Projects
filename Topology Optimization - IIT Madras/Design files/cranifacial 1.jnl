# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.openParasolid(fileName='G:/Bio Mechanics/cRaNIoFacIaL RecOnsTRuCtiOn.x_t', 
    topology=SOLID)
mdb.models['Model-1'].PartFromGeometryFile(combine=True, dimensionality=THREE_D
    , geometryFile=mdb.acis, name='cRaNIoFacIaL RecOnsTRuCtiOn', scale=1.0, 
    type=DEFORMABLE_BODY)
del mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn']
mdb.openIges('G:/Bio Mechanics/cRaNIoFacIaL RecOnsTRuCtiOn.IGS', msbo=False, 
    scaleFromFile=OFF, trimCurve=DEFAULT)
mdb.models['Model-1'].PartFromGeometryFile(combine=False, convertToAnalytical=1
    , dimensionality=THREE_D, geometryFile=mdb.acis, name=
    'cRaNIoFacIaL RecOnsTRuCtiOn', stitchEdges=1, stitchTolerance=1.0, type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].AutoRepair()
mdb.models['Model-1'].Material(name='Steel')
mdb.models['Model-1'].materials['Steel'].Elastic(table=((77000000000.0, 0.27), 
    ))
mdb.models['Model-1'].HomogeneousSolidSection(material='Steel', name='Design', 
    thickness=None)
mdb.models['Model-1'].HomogeneousSolidSection(material='Steel', name='Supprt', 
    thickness=None)
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].Set(cells=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), name='designset')
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].SectionAssignment(
    offset=0.0, offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].sets['designset']
    , sectionName='Design', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].Set(cells=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), name='supportset')
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].SectionAssignment(
    offset=0.0, offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].sets['supportset']
    , sectionName='Supprt', thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'cRaNIoFacIaL RecOnsTRuCtiOn-1', part=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'])
del mdb.models['Model-1'].rootAssembly.features['cRaNIoFacIaL RecOnsTRuCtiOn-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name=
    'cRaNIoFacIaL RecOnsTRuCtiOn-1', part=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'])
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'], 
    ), size=1.0)
mdb.models['Model-1'].rootAssembly.setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), technique=FREE)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), technique=FREE)
mdb.models['Model-1'].rootAssembly.setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.generateMesh(regions=(
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'], 
    ))
mdb.models['Model-1'].StaticStep(name='Designstep', previous='Initial')
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].faces.getSequenceFromMask(
    ('[#4000000 ]', ), ), name='fixedbcset')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Designstep', distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=
    None, name='fixedbc', region=
    mdb.models['Model-1'].rootAssembly.sets['fixedbcset'], u1=0.0, u2=0.0, u3=
    0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].faces.getSequenceFromMask(
    ('[#2000000 ]', ), ), name='fixedbctwoset')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Designstep', distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=
    None, name='fixedbctwo', region=
    mdb.models['Model-1'].rootAssembly.sets['fixedbctwoset'], u1=0.0, u2=0.0, 
    u3=UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.models['Model-1'].rootAssembly.Surface(name='pressurfone', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Designstep', 
    distributionType=UNIFORM, field='', magnitude=100.0, name='pressureone', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['pressurfone'])
mdb.models['Model-1'].loads['pressureone'].setValues(distributionType=
    TOTAL_FORCE)
mdb.models['Model-1'].rootAssembly.Surface(name='loadtwosurf', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].faces.getSequenceFromMask(
    ('[#10000 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Designstep', 
    distributionType=TOTAL_FORCE, field='', magnitude=10.0, name='loadtwo', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['loadtwosurf'])
mdb.models['Model-1'].loads.changeKey(fromName='pressureone', toName='loadone')
mdb.models['Model-1'].loads['loadtwo'].setValues(distributionType=UNIFORM)
mdb.models['Model-1'].loads['loadtwo'].setValues(distributionType=TOTAL_FORCE)
# Save by Muni Kumar lamborg on 2018_05_29-16.19.37; build 2017 2016_09_28-03.24.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
del mdb.models['Model-1'].rootAssembly.features['cRaNIoFacIaL RecOnsTRuCtiOn-1']
mdb.models['Model-1'].rootAssembly.Instance(dependent=ON, name=
    'cRaNIoFacIaL RecOnsTRuCtiOn-1', part=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'])
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].seedPart(
    deviationFactor=0.1, minSizeFactor=0.1, size=1.0)
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].setMeshControls(
    elemShape=HEX_DOMINATED, regions=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), technique=SYSTEM_ASSIGN)
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].setMeshControls(
    elemShape=TET, regions=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].setElementType(
    elemTypes=(ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(
    elemCode=C3D15, elemLibrary=STANDARD), ElemType(elemCode=C3D10, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].cells.getSequenceFromMask(
    ('[#2 ]', ), ), ))
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].generateMesh()
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].generateMesh()
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].setMeshControls(
    elemShape=TET, regions=
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), technique=FREE)
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].setElementType(
    elemTypes=(ElemType(elemCode=C3D20R, elemLibrary=STANDARD), ElemType(
    elemCode=C3D15, elemLibrary=STANDARD), ElemType(elemCode=C3D10, 
    elemLibrary=STANDARD)), regions=(
    mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].cells.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
del mdb.models['Model-1'].loads['loadone']
mdb.models['Model-1'].rootAssembly.Surface(name='loadonesurf', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Designstep', 
    distributionType=TOTAL_FORCE, field='', magnitude=100.0, name='loadone', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['loadonesurf'])
del mdb.models['Model-1'].loads['loadtwo']
mdb.models['Model-1'].rootAssembly.Surface(name='loadtwosurf1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].faces.getSequenceFromMask(
    ('[#10000 ]', ), ))
mdb.models['Model-1'].Pressure(amplitude=UNSET, createStepName='Designstep', 
    distributionType=TOTAL_FORCE, field='', magnitude=10.0, name='loadtwo', 
    region=mdb.models['Model-1'].rootAssembly.surfaces['loadtwosurf1'])
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='test', nodalOutputPrecision=SINGLE, 
    numCpus=1, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['test'].submit(consistencyChecking=OFF)
mdb.jobs['test']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "test.inp", line 20769: Unknown assembly node set FIXEDBCSET', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "test.inp", line 20769: Unknown assembly node set FIXEDBCSET', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "test.inp", line 20769: Unknown assembly node set FIXEDBCSET', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "test.inp", line 20774: Unknown assembly node set FIXEDBCTWOSET', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'in keyword *BOUNDARY, file "test.inp", line 20774: Unknown assembly node set FIXEDBCTWOSET', 
    'jobName': 'test'})
mdb.jobs['test']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCTWOSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCTWOSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_FIXEDBCSET BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_FIXEDBCSET BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_FIXEDBCSET BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_FIXEDBCTWOSET BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'A BOUNDARY CONDITION HAS BEEN SPECIFIED ON NODE SET ASSEMBLY_FIXEDBCTWOSET BUT THIS NODE SET IS NOT ACTIVE IN THE MODEL', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCTWOSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'NODE SET ASSEMBLY_FIXEDBCTWOSET HAS NOT BEEN DEFINED', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\test.odb', 'jobName': 'test'})
mdb.jobs['test']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'test'})
mdb.jobs['test']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'test'})
mdb.jobs['test']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'test'})
del mdb.models['Model-1'].boundaryConditions['fixedbc']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].faces.getSequenceFromMask(
    ('[#2000000 ]', ), ), name='fixedset1')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Designstep', distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=
    None, name='fixedload', region=
    mdb.models['Model-1'].rootAssembly.sets['fixedset1'], u1=0.0, u2=0.0, u3=
    UNSET, ur1=UNSET, ur2=UNSET, ur3=UNSET)
del mdb.models['Model-1'].boundaryConditions['fixedbctwo']
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['cRaNIoFacIaL RecOnsTRuCtiOn-1'].faces.getSequenceFromMask(
    ('[#4000000 ]', ), ), name='fixedtwoset1')
mdb.models['Model-1'].DisplacementBC(amplitude=UNSET, createStepName=
    'Designstep', distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=
    None, name='fixedloadtwo', region=
    mdb.models['Model-1'].rootAssembly.sets['fixedtwoset1'], u1=0.0, u2=0.0, 
    u3=0.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.jobs['test'].submit(consistencyChecking=OFF)
mdb.jobs['test']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 'jobName': 'test'})
mdb.jobs['test']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\test.odb', 'jobName': 'test'})
mdb.jobs['test']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'test'})
mdb.jobs['test']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-DFG6L0C', 'handle': 9256, 'jobName': 'test'})
mdb.jobs['test']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'test'})
mdb.jobs['test']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'test'})
mdb.jobs['test']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'test', 'memory': 177.0})
mdb.jobs['test']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8074.0, 'jobName': 'test'})
mdb.jobs['test']._Message(MINIMUM_MEMORY, {'minimum_memory': 38.0, 
    'phase': STANDARD_PHASE, 'jobName': 'test'})
mdb.jobs['test']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'test'})
mdb.jobs['test']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'test', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['test']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'test'})
mdb.jobs['test']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'test'})
mdb.jobs['test']._Message(JOB_COMPLETED, {'time': 'Tue May 29 16:30:07 2018', 
    'jobName': 'test'})
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (1.0, 1.0)), name=
    'Amp-1', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].loads['loadone'].setValues(amplitude='Amp-1', 
    distributionType=UNIFORM)
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (1.0, 1.0)), name=
    'Amp-2', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].loads['loadtwo'].setValues(distributionType=UNIFORM)
mdb.jobs['test'].submit(consistencyChecking=OFF)
mdb.jobs['test']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 'jobName': 'test'})
mdb.jobs['test']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'test'})
mdb.jobs['test']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'C:\\temp\\test.odb', 'jobName': 'test'})
mdb.jobs['test']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'test'})
mdb.jobs['test']._Message(STARTED, {'phase': STANDARD_PHASE, 
    'clientHost': 'DESKTOP-DFG6L0C', 'handle': 4332, 'jobName': 'test'})
mdb.jobs['test']._Message(STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'test'})
mdb.jobs['test']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'test'})
mdb.jobs['test']._Message(MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 
    'jobName': 'test', 'memory': 177.0})
mdb.jobs['test']._Message(PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 
    'physical_memory': 8074.0, 'jobName': 'test'})
mdb.jobs['test']._Message(MINIMUM_MEMORY, {'minimum_memory': 38.0, 
    'phase': STANDARD_PHASE, 'jobName': 'test'})
mdb.jobs['test']._Message(ODB_FRAME, {'phase': STANDARD_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'test'})
mdb.jobs['test']._Message(STATUS, {'totalTime': 1.0, 'attempts': 1, 
    'timeIncrement': 1.0, 'increment': 1, 'stepTime': 1.0, 'step': 1, 
    'jobName': 'test', 'severe': 0, 'iterations': 1, 'phase': STANDARD_PHASE, 
    'equilibrium': 1})
mdb.jobs['test']._Message(END_STEP, {'phase': STANDARD_PHASE, 'stepId': 1, 
    'jobName': 'test'})
mdb.jobs['test']._Message(COMPLETED, {'phase': STANDARD_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'test'})
mdb.jobs['test']._Message(JOB_COMPLETED, {'time': 'Tue May 29 16:34:49 2018', 
    'jobName': 'test'})
mdb.models['Model-1'].loads['loadone'].setValues(magnitude=1000.0)
mdb.models['Model-1'].loads['loadtwo'].setValues(magnitude=100.0)
mdb.models['Model-1'].TopologyTask(name='topo1', region=MODEL)
mdb.models['Model-1'].optimizationTasks['topo1'].SingleTermDesignResponse(
    drivingRegion=None, identifier='VOLUME', name='vol', operation=SUM, region=
    MODEL, stepOptions=())
mdb.models['Model-1'].optimizationTasks['topo1'].SingleTermDesignResponse(
    drivingRegion=None, identifier='ENERGY_STIFF_MEASURE', name='stress', 
    operation=SUM, region=MODEL, stepOptions=())
mdb.models['Model-1'].optimizationTasks['topo1'].designResponses.changeKey(
    fromName='stress', toName='stiffness')
mdb.models['Model-1'].optimizationTasks['topo1'].designResponses['stiffness'].setValues(
    drivingRegion=None, identifier='STRAIN_ENERGY', operation=SUM, stepOptions=
    ())
mdb.models['Model-1'].optimizationTasks['topo1'].designResponses.changeKey(
    fromName='stiffness', toName='se')
mdb.models['Model-1'].optimizationTasks['topo1'].ObjectiveFunction(name='se1', 
    objectives=((OFF, 'se', 1.0, 0.0, ''), ))
mdb.models['Model-1'].optimizationTasks['topo1'].OptimizationConstraint(
    designResponse='vol', name='const1', restrictionMethod=
    RELATIVE_LESS_THAN_EQUAL, restrictionValue=0.25)
mdb.OptimizationProcess(dataSaveFrequency=OPT_DATASAVE_SPECIFY_CYCLE, 
    description='', maxDesignCycle=50, model='Model-1', name='topoopt', 
    odbMergeFrequency=2, prototypeJob='topoopt-Job', task='topo1')
mdb.optimizationProcesses['topoopt'].Job(atTime=None, getMemoryFromAnalysis=
    True, memory=90, memoryUnits=PERCENTAGE, model='Model-1', 
    multiprocessingMode=DEFAULT, name='topoopt-Job', numCpus=1, numGPUs=0, 
    queue=None, waitHours=0, waitMinutes=0)
mdb.optimizationProcesses['topoopt'].submit()
mdb.optimizationProcesses['topoopt']._Message(STARTED, {'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                ___ ___ __  __ _   _ _    ___   _                         |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               / __|_ _|  \\/  | | | | |  |_ _| /_\\                        |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               \\__ \\| || |\\/| | |_| | |__ | | / _ \\                       |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               |___/___|_|  |_|\\___/|____|___/_/ \\_\\                      |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                     _______                                              |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                    |__   __|                                             |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | | ___  ___  ___ __ _                             |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | |/ _ \\/ __|/ __/ _` |                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | | (_) \\__ \\ (_| (_| |                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       |_|\\___/|___/\\___\\__,_|                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |            _____ _                   _                                   |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           / ____| |                 | |                                  |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |          | (___ | |_ _ __ _   _  ___| |_ _   _ _ __ ___                  |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           \\___ \\| __| "__| | | |/ __| __| | | | "__/ _ \\                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           ____) | |_| |  | |_| | (__| |_| |_| | | |  __/                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |          |_____/ \\__|_|   \\__,_|\\___|\\__|\\__,_|_|  \\___|                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    PERL execution control                                                |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    Version 3DEXPERIENCE R2017x                                           |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    Copyright (c) 2016 Dassault Systemes Simulia Corp.                    |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Logfile: topoopt\\TOSCA.OUT', 'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' | Starting jobname: "topoopt"                                              |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure pre-processor', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 0', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 1248, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:46:07 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 0', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 1', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 13028, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:46:46 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 1', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 2', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 3232, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:47:14 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 2', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 3', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 11180, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:47:42 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 3', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 4', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 908, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:48:10 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 4', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 5', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 13676, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:48:39 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 5', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 6', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8860, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:49:07 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 6', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 7', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 2532, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:49:35 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 7', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 8', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 884, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:50:02 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 8', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 9', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 5056, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:50:30 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 9', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 10', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 900, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:50:58 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 10', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 11', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8020, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:51:26 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 11', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 12', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 10708, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:51:54 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 12', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 13', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 13776, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:52:22 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 13', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 14', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 13348, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:52:50 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 14', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 15', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 12640, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:53:18 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 15', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 16', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8428, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:53:45 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 16', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 17', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 12860, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:54:13 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 17', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 18', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 3608, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:54:41 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 18', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 19', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 11924, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:55:07 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 19', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 20', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 11292, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:55:35 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 20', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 21', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 5632, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:56:03 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 21', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 22', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 14148, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:56:31 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 22', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 23', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 1732, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:57:00 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 23', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 24', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 10812, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:57:28 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 24', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 25', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 9704, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:57:57 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 25', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 26', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8108, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:58:25 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 26', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 27', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 13088, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:58:53 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 27', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 28', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 7680, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:59:21 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 28', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 29', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8936, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 16:59:49 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 29', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 30', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 4184, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 17:00:17 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 30', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 31', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 12516, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 17:00:45 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 31', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 32', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 6056, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 17:01:13 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 32', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 33', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 14044, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 17:01:41 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 33', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 34', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 11404, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 17:02:09 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 34', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 35', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 4308, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 17:02:37 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 35', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 36', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 2416, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 17:03:06 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 36', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Generating REPORT input file: topoopt\\topoopt_post.par', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure.report module', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' SIMULIA Tosca Structure ended successfully', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(COMPLETED, {
    'time': 'Tue May 29 17:03:18 2018', 'jobName': 'topoopt'})
# Save by Muni Kumar lamborg on 2018_05_29-17.08.26; build 2017 2016_09_28-03.24.59 126836
# Save by Muni Kumar lamborg on 2018_05_29-17.08.34; build 2017 2016_09_28-03.24.59 126836
# Save by Muni Kumar lamborg on 2018_05_29-17.11.49; build 2017 2016_09_28-03.24.59 126836
# Save by Muni Kumar lamborg on 2018_05_29-17.44.55; build 2017 2016_09_28-03.24.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].optimizationTasks['topo1'].optimizationConstraints['const1'].setValues(
    restrictionValue=0.15)
mdb.optimizationProcesses['topoopt'].submit()
mdb.optimizationProcesses['topoopt']._Message(STARTED, {'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                ___ ___ __  __ _   _ _    ___   _                         |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               / __|_ _|  \\/  | | | | |  |_ _| /_\\                        |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               \\__ \\| || |\\/| | |_| | |__ | | / _ \\                       |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               |___/___|_|  |_|\\___/|____|___/_/ \\_\\                      |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                     _______                                              |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                    |__   __|                                             |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | | ___  ___  ___ __ _                             |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | |/ _ \\/ __|/ __/ _` |                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | | (_) \\__ \\ (_| (_| |                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       |_|\\___/|___/\\___\\__,_|                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |            _____ _                   _                                   |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           / ____| |                 | |                                  |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |          | (___ | |_ _ __ _   _  ___| |_ _   _ _ __ ___                  |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           \\___ \\| __| "__| | | |/ __| __| | | | "__/ _ \\                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           ____) | |_| |  | |_| | (__| |_| |_| | | |  __/                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |          |_____/ \\__|_|   \\__,_|\\___|\\__|\\__,_|_|  \\___|                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    PERL execution control                                                |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    Version 3DEXPERIENCE R2017x                                           |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    Copyright (c) 2016 Dassault Systemes Simulia Corp.                    |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' The directory "topoopt" exists and will be deleted ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Logfile: topoopt\\TOSCA.OUT', 'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' | Starting jobname: "topoopt"                                              |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure pre-processor', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 0', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 580, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:01:01 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 0', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 1', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 2948, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:01:38 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 1', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 2', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 9616, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:02:07 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 2', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 3', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 10080, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:02:35 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 3', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 4', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8856, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:03:03 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 4', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 5', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 7924, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.models['Model-1'].optimizationTasks['topo1'].optimizationConstraints['const1'].setValues(
    restrictionValue=0.12)
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:03:31 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 5', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 6', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 10896, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:03:59 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 6', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 7', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 1376, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:04:27 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 7', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 8', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 5880, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:04:55 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 8', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 9', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8524, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:05:21 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 9', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 10', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 1940, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:05:50 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 10', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 11', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 10772, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:06:19 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 11', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 12', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 9444, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:06:46 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 12', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 13', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 10888, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:07:14 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 13', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 14', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 4816, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:07:42 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 14', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 15', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8268, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:08:10 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 15', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 16', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 3660, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:08:38 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 16', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 17', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 3120, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:09:06 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 17', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 18', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 8972, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:09:32 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 18', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 19', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 12336, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:10:00 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 19', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 20', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 9988, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:10:26 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 20', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 21', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 12268, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:10:52 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 21', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 22', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 6100, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:11:20 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 22', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 23', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 6348, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:11:48 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 23', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 24', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 3228, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:12:14 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 24', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 25', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 2052, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:12:42 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 25', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 26', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 484, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:13:10 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 26', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 27', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 7644, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:13:37 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 27', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 28', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 5580, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:14:05 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 28', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 29', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 6328, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:14:31 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 29', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 30', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 10232, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:14:57 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 30', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 31', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 6112, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:15:25 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 31', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 32', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 11632, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:15:51 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 32', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 33', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 9580, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:16:19 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 33', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 34', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 9352, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:16:47 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 34', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 35', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '650 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 13100, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MEMORY_ESTIMATE, {'phase': STANDARD_PHASE, 'jobName': 'topoopt-Job', 
    'memory': 177.0})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    PHYSICAL_MEMORY, {'phase': STANDARD_PHASE, 'physical_memory': 8074.0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(
    MINIMUM_MEMORY, {'minimum_memory': 38.0, 'phase': STANDARD_PHASE, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STATUS, {
    'totalTime': 1.0, 'attempts': 1, 'timeIncrement': 1.0, 'increment': 1, 
    'stepTime': 1.0, 'step': 1, 'jobName': 'topoopt-Job', 'severe': 0, 
    'iterations': 1, 'phase': STANDARD_PHASE, 'equilibrium': 1})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(END_STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': STANDARD_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(JOB_COMPLETED
    , {'time': 'Tue May 29 20:17:16 2018', 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt']._archiveJob(jobName='topoopt-Job')
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure optimization module - design cycle 35', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Generating REPORT input file: topoopt\\topoopt_post.par', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure.report module', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' SIMULIA Tosca Structure ended successfully', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(COMPLETED, {
    'time': 'Tue May 29 20:17:26 2018', 'jobName': 'topoopt'})
# Save by Muni Kumar lamborg on 2018_05_29-20.23.16; build 2017 2016_09_28-03.24.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].generateMesh()
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].deleteMesh()
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].seedPart(
    deviationFactor=0.1, minSizeFactor=0.1, size=0.02)
mdb.models['Model-1'].parts['cRaNIoFacIaL RecOnsTRuCtiOn'].generateMesh()
# Save by Muni Kumar lamborg on 2018_05_29-20.31.25; build 2017 2016_09_28-03.24.59 126836
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.optimizationProcesses['topoopt'].submit()
mdb.optimizationProcesses['topoopt']._Message(STARTED, {'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                ___ ___ __  __ _   _ _    ___   _                         |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               / __|_ _|  \\/  | | | | |  |_ _| /_\\                        |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               \\__ \\| || |\\/| | |_| | |__ | | / _ \\                       |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |               |___/___|_|  |_|\\___/|____|___/_/ \\_\\                      |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                     _______                                              |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                    |__   __|                                             |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | | ___  ___  ___ __ _                             |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | |/ _ \\/ __|/ __/ _` |                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       | | (_) \\__ \\ (_| (_| |                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                       |_|\\___/|___/\\___\\__,_|                            |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |            _____ _                   _                                   |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           / ____| |                 | |                                  |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |          | (___ | |_ _ __ _   _  ___| |_ _   _ _ __ ___                  |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           \\___ \\| __| "__| | | |/ __| __| | | | "__/ _ \\                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |           ____) | |_| |  | |_| | (__| |_| |_| | | |  __/                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |          |_____/ \\__|_|   \\__,_|\\___|\\__|\\__,_|_|  \\___|                 |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |                                                                          |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    PERL execution control                                                |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    Version 3DEXPERIENCE R2017x                                           |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' |    Copyright (c) 2016 Dassault Systemes Simulia Corp.                    |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' The directory "topoopt" exists and will be deleted ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Logfile: topoopt\\TOSCA.OUT', 'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' | Starting jobname: "topoopt"                                              |', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': '  -------------------------------------------------------------------------- ', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting SIMULIA Tosca Structure pre-processor', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt']._Message(STATUS, {
    'message': ' Starting Abaqus analysis - design cycle 0', 
    'jobName': 'topoopt'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': BATCHPRE_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 0, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': '3058 elements are distorted. Either the isoparametric angles are out of the suggested limits or the triangular or tetrahedral quality measure is bad. The elements have been identified in element set WarnElemDistorted.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'THE PARAMETER OP=NEW HAS BEEN MIXED WITH EITHER OP=ADD OR OP=REPLACE ON *OUTPUT REQUESTS.  OP=NEW IS ASSUMED FOR ALL *OUTPUT REQUESTS IN THIS STEP', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FILE, {
    'phase': BATCHPRE_PHASE, 'file': 'C:\\temp\\topoopt\\topoopt-Job.odb', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(WARNING, {
    'phase': BATCHPRE_PHASE, 
    'message': 'AN OUTPUT DATABASE REQUEST THAT REQUIRES THE CALCULATOR HAS BEEN FOUND.  IF VIEWING THE RESULTS BEFORE THE ANALYSIS IS COMPLETE, PLEASE RUN THE CALCULATOR MANUALLY USING THE CONVERT=ODB AND OLDJOB= OPTIONS.', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(COMPLETED, {
    'phase': BATCHPRE_PHASE, 'message': 'Analysis phase complete', 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STARTED, {
    'phase': STANDARD_PHASE, 'clientHost': 'DESKTOP-DFG6L0C', 'handle': 4984, 
    'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(STEP, {
    'phase': STANDARD_PHASE, 'stepId': 1, 'jobName': 'topoopt-Job'})
mdb.optimizationProcesses['topoopt'].jobs['topoopt-Job']._Message(ODB_FRAME, {
    'phase': STANDARD_PHASE, 'step': 0, 'frame': 0, 'jobName': 'topoopt-Job'})
# Save by Muni Kumar lamborg on 2018_05_30-02.08.19; build 2017 2016_09_28-03.24.59 126836
